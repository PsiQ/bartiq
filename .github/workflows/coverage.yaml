```yaml
name: "ðŸ“Š Coverage Report"

on:
  workflow_dispatch:
  pull_request:
    branches: [main]
  # Only target base for write permissions
  pull_request_target:
    branches: [main]

permissions:
  contents: read
  id-token: write

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install poetry pytest pytest-cov pycobertura
          poetry config virtualenvs.in-project true
          poetry install --no-interaction --no-ansi --extras optimization

      - name: Run tests with coverage
        run: |
          poetry run pytest --cov=bartiq --cov-report=xml:coverage.xml --no-perf-tests

      - name: Compute coverage diff
        # Always run, but don't fail PR
        continue-on-error: true
        run: |
          if [ -f data/main/coverage.xml ]; then
            pycobertura diff data/main/coverage.xml coverage.xml --format markdown > coverage_diff.md || true
          else
            echo "No baseline found; skipping diff."
          fi

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            coverage.xml
            coverage_diff.md
```
